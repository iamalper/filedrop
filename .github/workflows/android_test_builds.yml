name: Android Test Build

# 1
on:

  # 3
  workflow_dispatch:

# 4
jobs:
  # 5
  build:
    # 6
    runs-on: ubuntu-latest
    needs: version
    # 7
    steps:
      # 8
      - uses: actions/checkout@v3
      
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
          
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      # 10   
      - uses: subosito/flutter-action@v2
        with:
          # 11
          channel: 'stable'
          cache: true

      # Runs a set of commands using the runners shell
      - name: Start release appbundle build
        run: flutter build appbundle
        
      - name: Start release apk build
        run: flutter build apk

  publish:
    runs-on: ubuntu-latest
    needs: build  
      - name: Releasing builds
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          automatic_release_tag: "${{ jobs.build.steps.version.outputs.content }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            build/app/outputs/bundle/release/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  version:
    name: Create version number
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # 2
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      # 3
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      # 4
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
